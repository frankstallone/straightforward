/* Utility classes */

/* Main navigation buttons */
.header-links a {
  color: var(--blue100);
  font-size: var(--step-0);
  display: inline-block;
  padding: 0.5rem 0.5rem;
  text-decoration: none;
  transition:
    color var(--transition-base),
    box-shadow var(--transition-base);
  box-shadow: inset 0 0 0 0 var(--yellow300);
}

.header-links a:hover,
.header-links a:focus,
.header-links a:active {
  color: var(--yellow900);
  text-decoration: none;
  box-shadow: inset 200px 0 0 0 var(--yellow300);
}

/* Main buttons */

/* Clips */

.clip-right {
  clip-path: polygon(
    var(--skew-s) 0%,
    100% 0%,
    calc(100% - var(--skew-s)) 100%,
    0% 100%
  );
}

/* Text */

.color-loud-text {
  color: var(--color-loud);
}

.color-loud {
  background-color: var(--color-loud);
}

.emphasized-header {
  clip-path: polygon(
    var(--skew-s) 0%,
    100% 0%,
    calc(100% - var(--skew-s)) 100%,
    0% 100%
  );
  background: var(--color-loud);
  color: var(--color-light);
  padding: var(--space-xs) var(--space-xl);
}

/* Width */

.max-inline-size\:measure-lg {
  max-inline-size: calc(var(--measure) * 1.25) !important;
}

.max-inline-size\:measure {
  max-inline-size: var(--measure) !important;
}

.max-inline-size\:measure\/2 {
  max-inline-size: calc(var(--measure) / 1.25) !important;
}

.max-inline-size\:paragraph {
  max-inline-size: 50ch !important;
}

.max-inline-size-full {
  max-inline-size: 100vw;
}

/* Buttons */

.button {
  display: block;
  text-decoration: none;
  border: none;
  background-color: var(--spot-color-text, var(--gray1200));
  color: var(--spot-color, var(--gray100));
  padding-inline: var(--space-m);
  padding-block: var(--space-s);
  text-align: center;
}
.button:hover,
.button:focus,
.button:active {
  text-decoration: none;
}
.button:focus {
  outline: 2px solid var(--spot-color-text, var(--gray1200));
}

.button-disabled {
  opacity: 0.5;
  pointer-events: none;
}

/* Region */

.region[data-padding='l'] {
  --region-space-top: var(--space-l-2xl);
  --region-space-bottom: var(--space-l-2xl);
}

/* Box */

.box[data-padding='xl'] {
  --padding: var(--space-xl);
}

.box[data-padding='2xl'] {
  --padding: var(--space-2xl);
}

.box[data-padding='3xl'] {
  --padding: var(--space-3xl);
}

/* Switcher */

.switcher[data-gap='none'] {
  --gap: 0;
}

.switcher[data-trenshold='xl'] {
  --threshold: 50rem;
}

/* Wrapper */

.wrapper[data-layout='md'] {
  --measure: 70ch;
}

/* Reel */

.reel[data-gap='m-l'] {
  --grid-gap: var(--space-m-l);
}

/* Card */

.card[data-layout='full'] {
  --max-width: auto;
}

/* Grid */

.grid[data-layout='50-50'] {
  --grid-placement: auto-fit;
}

.grid[data-rows='masonry'] {
  align-items: start;
  grid-template-rows: masonry;
}

/* Text colors */

.text-color-blue100 {
  color: var(--blue100);
}

.text-color-blue200 {
  color: var(--blue200);
}

.text-color-blue300 {
  color: var(--blue300);
}

.text-color-blue400 {
  color: var(--blue400);
}

.text-color-blue500 {
  color: var(--blue500);
}

.text-color-blue600 {
  color: var(--blue600);
}

.text-color-blue700 {
  color: var(--blue700);
}

.text-color-blue800 {
  color: var(--blue800);
}

.text-color-blue900 {
  color: var(--blue900);
}

.text-color-blue1000 {
  color: var(--blue1000);
}

.text-color-purple100 {
  color: var(--purple100);
}
.text-color-purple200 {
  color: var(--purple200);
}
.text-color-purple300 {
  color: var(--purple300);
}
.text-color-purple400 {
  color: var(--purple400);
}
.text-color-purple500 {
  color: var(--purple500);
}
.text-color-purple600 {
  color: var(--purple600);
}
.text-color-purple700 {
  color: var(--purple700);
}
.text-color-purple800 {
  color: var(--purple800);
}
.text-color-purple900 {
  color: var(--purple900);
}
.text-color-purple1000 {
  color: var(--purple1000);
}
.text-color-purple1100 {
  color: var(--purple1100);
}
.text-color-pink100 {
  color: var(--pink100);
}
.text-color-pink200 {
  color: var(--pink200);
}
.text-color-pink300 {
  color: var(--pink300);
}
.text-color-pink400 {
  color: var(--pink400);
}
.text-color-pink500 {
  color: var(--pink500);
}
.text-color-pink600 {
  color: var(--pink600);
}
.text-color-pink700 {
  color: var(--pink700);
}
.text-color-pink800 {
  color: var(--pink800);
}
.text-color-pink900 {
  color: var(--pink900);
}
.text-color-pink1000 {
  color: var(--pink1000);
}
.text-color-pink1100 {
  color: var(--pink1100);
}
.text-color-yellow100 {
  color: var(--yellow100);
}
.text-color-yellow200 {
  color: var(--yellow200);
}
.text-color-yellow300 {
  color: var(--yellow300);
}
.text-color-yellow400 {
  color: var(--yellow400);
}
.text-color-yellow500 {
  color: var(--yellow500);
}
.text-color-yellow600 {
  color: var(--yellow600);
}
.text-color-yellow700 {
  color: var(--yellow700);
}
.text-color-yellow800 {
  color: var(--yellow800);
}
.text-color-yellow900 {
  color: var(--yellow900);
}
.text-color-yellow1000 {
  color: var(--yellow1000);
}
.text-color-yellow1100 {
  color: var(--yellow1100);
}
.text-color-green100 {
  color: var(--green100);
}
.text-color-green200 {
  color: var(--green200);
}
.text-color-green300 {
  color: var(--green300);
}
.text-color-green400 {
  color: var(--green400);
}
.text-color-green500 {
  color: var(--green500);
}
.text-color-green600 {
  color: var(--green600);
}
.text-color-green700 {
  color: var(--green700);
}
.text-color-green800 {
  color: var(--green800);
}
.text-color-green900 {
  color: var(--green900);
}
.text-color-green1000 {
  color: var(--green1000);
}
.text-color-green1100 {
  color: var(--green1100);
}
.text-color-orange100 {
  color: var(--orange100);
}
.text-color-orange200 {
  color: var(--orange200);
}
.text-color-orange300 {
  color: var(--orange300);
}
.text-color-orange400 {
  color: var(--orange400);
}
.text-color-orange500 {
  color: var(--orange500);
}
.text-color-orange600 {
  color: var(--orange600);
}
.text-color-orange700 {
  color: var(--orange700);
}
.text-color-orange800 {
  color: var(--orange800);
}
.text-color-orange900 {
  color: var(--orange900);
}
.text-color-orange1000 {
  color: var(--orange1000);
}
.text-color-orange1100 {
  color: var(--orange1100);
}

/* Flex */

.flex {
  display: flex;
}

flex-1 {
  flex: 1 1 0%;
}

flex-auto {
  flex: 1 1 auto;
}

flex-initial {
  flex: 0 1 auto;
}

flex-none {
  flex: none;
}

/* Flex Direction
Utilities for controlling the direction of flex items. */

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

/* Justify Content
Utilities for controlling how flex and grid items are positioned along a container's main axis. */

.justify-normal {
  justify-content: normal;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.self-auto {
  align-self: auto;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.self-baseline {
  align-self: baseline;
}

/* Justify Items
Utilities for controlling how grid items are aligned along their inline axis. */

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

/* Media */

.aspect-video {
  aspect-ratio: 16 / 9;
}

/* Font */

.uppercase {
  text-transform: uppercase;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-strike {
  text-decoration: line-through;
}

.text-underline {
  text-decoration: underline;
}

.italic {
  font-style: italic;
}

.underline {
  text-decoration-line: underline;
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.no-underline {
  text-decoration-line: none;
}

.font-weight-base {
  font-weight: var(--font-base-weight);
}

.font-weight-emphasis {
  font-weight: var(--font-emphasis-weight);
}

.font-weight-semibold {
  font-weight: var(--font-semibold-weight);
}

.font-weight-bold {
  font-weight: var(--font-bold-weight);
}

.font-weight-extra-bold {
  font-weight: var(--font-extra-bold-weight);
}

.font-weight-black {
  font-weight: var(--font-black-weight);
}

.font-display {
  font-family: var(--font-display);
}

.font-date {
  font-family: var(--font-date);
}

.tracking-l {
  letter-spacing: var(--tracking-l);
}
.tracking-m {
  letter-spacing: var(--tracking-m);
}
.tracking-base {
  letter-spacing: var(--tracking);
}
.tracking-s {
  letter-spacing: var(--tracking-s);
}

.step--2 {
  font-size: var(--step--2);
}
.step--1 {
  font-size: var(--step--1);
}
.step-0 {
  font-size: var(--step-0);
}
.step-1 {
  font-size: var(--step-1);
}
.step-2 {
  font-size: var(--step-2);
}
.step-3 {
  font-size: var(--step-3);
}
.step-4 {
  font-size: var(--step-4);
}
.step-5 {
  font-size: var(--step-5);
}
.step-6 {
  font-size: var(--step-6);
}
.step-7 {
  font-size: var(--step-7);
}

/* General */

.inset-0 {
  inset: 0px;
}

.hidden {
  display: none;
  visibility: hidden;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.top-pad {
  padding-block-start: var(--gutter);
}

.block {
  display: block;
}

.w-3\/4 {
  width: 75%;
}
.h-3\/4 {
  height: 75%;
}

.h-auto {
  height: auto;
}

.currentColor {
  fill: currentColor;
}

/*
	Improved screen reader only CSS class
	@author Gaël Poupard
		@note Based on Yahoo!'s technique
		@author Thierry Koblentz
		@see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
	* 1.
		@note `clip` is deprecated but works everywhere
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
	* 2.
		@note `clip-path` is the future-proof version, but not very well supported yet
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
		@see http://caniuse.com/#search=clip-path
		@author Yvain Liechti
		@see https://twitter.com/ryuran78/status/778943389819604992
	* 3.
		@note preventing text to be condensed
		author J. Renée Beach
		@see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
		@note Drupal 8 goes with word-wrap: normal instead
		@see https://www.drupal.org/node/2045151
		@see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
	* 4.
		@note !important is important
		@note Obviously you wanna hide something
		@author Harry Roberts
		@see https://csswizardry.com/2016/05/the-importance-of-important/
*/

.sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important; /* 1 */
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important; /* 2 */
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important; /* 3 */
}

/*
	Use in conjunction with .sr-only to only display content when it's focused.
	@note Useful for skip links 
	@see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
	@note Based on a HTML5 Boilerplate technique, included in Bootstrap
	@note Fixed a bug with position: static on iOS 10.0.2 + VoiceOver
		@author Sylvain Pigeard
		@see https://github.com/twbs/bootstrap/issues/20732
*/
.sr-only-focusable:focus,
.sr-only-focusable:active {
  clip: auto !important;
  -webkit-clip-path: none !important;
  clip-path: none !important;
  height: auto !important;
  margin: auto !important;
  overflow: visible !important;
  width: auto !important;
  white-space: normal !important;
}

.slant {
  fill: var(--spot-color, var(--color-light));
  display: block;
  height: 3.5em;
  width: 100%;
}

/* Spot colors */

.spot-color-blue {
  --spot-color: var(--blue200);
  --spot-color-text: var(--blue900);
}

.spot-color-blue-dark {
  --spot-color: var(--blue1000);
  --spot-color-text: var(--blue300);
}

.spot-color-purple {
  --spot-color: var(--purple300);
  --spot-color-text: var(--purple1000);
}

.spot-color-purple-dark {
  --spot-color: var(--purple1100);
  --spot-color-text: var(--purple300);
}

.spot-color-yellow {
  --spot-color: var(--yellow300);
  --spot-color-text: var(--yellow1000);
}

.spot-color-yellow-dark {
  --spot-color: var(--yellow1000);
  --spot-color-text: var(--yellow200);
}

.spot-color-pink {
  --spot-color: var(--pink100);
  --spot-color-text: var(--pink1000);
}

.spot-color-pink-dark {
  --spot-color: var(--pink1100);
  --spot-color-text: var(--pink300);
}

.spot-color-green {
  --spot-color: var(--green100);
  --spot-color-text: var(--green1000);
}

.spot-color-green-dark {
  --spot-color: var(--green1100);
  --spot-color-text: var(--green200);
}

.spot-color-orange {
  --spot-color: var(--orange100);
  --spot-color-text: var(--orange1000);
}

.spot-color-orange-dark {
  --spot-color: var(--orange1000);
  --spot-color-text: var(--orange200);
}

.spot-color-gray {
  --spot-color: var(--gray200);
  --spot-color-text: var(--gray1200);
}

.spot-color-gray-dark {
  --spot-color: var(--gray1200);
  --spot-color-text: var(--gray100);
}

.rounded {
  border-radius: var(--border-radius);
}

/* Object Fit
Utilities for controlling how a replaced element's content should be resized. */

.object-contain {
  object-fit: contain;
}

.object-cover {
  object-fit: cover;
}

.object-fill {
  object-fit: fill;
}

.object-none {
  object-fit: none;
}

.object-scale-down {
  object-fit: scale-down;
}

/* Object Position
Utilities for controlling how a replaced element's content should be positioned within its container. */

.object-bottom {
  object-position: bottom;
}

.object-center {
  object-position: center;
}

.object-left {
  object-position: left;
}

.object-left-bottom {
  object-position: left bottom;
}

.object-left-top {
  object-position: left top;
}

.object-right {
  object-position: right;
}

.object-right-bottom {
  object-position: right bottom;
}

.object-right-top {
  object-position: right top;
}

.object-top {
  object-position: top;
}

/* Position
Utilities for controlling how an element is positioned in the DOM. */

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

/* Z-Index
Utilities for controlling the stack order of an element. */

.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-30 {
  z-index: 30;
}

.z-40 {
  z-index: 40;
}

.z-50 {
  z-index: 50;
}

.z-auto {
  z-index: auto;
}

/* Overflow
Utilities for controlling how an element handles content that is too large for the container. */

.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-clip {
  overflow: clip;
}
.overflow-visible {
  overflow: visible;
}
.overflow-scroll {
  overflow: scroll;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-hidden {
  overflow-y: hidden;
}
.overflow-x-clip {
  overflow-x: clip;
}
.overflow-y-clip {
  overflow-y: clip;
}
.overflow-x-visible {
  overflow-x: visible;
}
.overflow-y-visible {
  overflow-y: visible;
}
.overflow-x-scroll {
  overflow-x: scroll;
}
.overflow-y-scroll {
  overflow-y: scroll;
}

/* Margin
Utilities for controlling margin */

.my-m-l {
  margin-bottom: clamp(1.5rem, calc(1.15rem + 1.74vw), 2.5rem);
  margin-top: clamp(1.5rem, calc(1.15rem + 1.74vw), 2.5rem);
}

.mt-xl-2xl {
  margin-top: clamp(3rem, calc(2.3rem + 3.48vw), 5rem);
}

.mt-s-l {
  margin-top: clamp(1.125rem, 0.41rem + 3.45vw, 3rem);
}

.mt-l-xl {
  margin-top: clamp(2rem, calc(1.39rem + 3.04vw), 3.75rem);
}

.mt-l {
  margin-top: clamp(2rem, calc(1.83rem + 0.87vw), 2.5rem);
}

.mb-l-xl {
  margin-bottom: clamp(2rem, calc(1.39rem + 3.04vw), 3.75rem);
}

.mt-s {
  margin-top: clamp(1rem, calc(0.91rem + 0.43vw), 1.25rem);
}

.ml-auto {
  margin-left: auto;
}

.mr-auto {
  margin-right: auto;
}

.mt-m-l {
  margin-top: clamp(1.5rem, calc(1.15rem + 1.74vw), 2.5rem);
}

.mt-2xs-xs {
  margin-top: clamp(0.75rem, calc(0.68rem + 0.33vw), 0.94rem);
}

.mb-xl-2xl {
  margin-bottom: clamp(3rem, calc(2.3rem + 3.48vw), 5rem);
}

.mb-3xs {
  margin-bottom: clamp(0.25rem, calc(0.23rem + 0.11vw), 0.31rem);
}

.mt-m {
  margin-top: clamp(1.5rem, calc(1.37rem + 0.65vw), 1.88rem);
}

.mb-m-l {
  margin-bottom: clamp(1.5rem, calc(1.15rem + 1.74vw), 2.5rem);
}

.mx-auto {
  margin-inline: auto;
}
.my-auto {
  margin-block: auto;
}

/* Flow
Utilities for controlling flow space */

.flow-space-3xs {
  --flow-space: clamp(0.25rem, calc(0.23rem + 0.11vw), 0.31rem);
}

.flow-space-2xs {
  --flow-space: clamp(0.5rem, calc(0.46rem + 0.22vw), 0.63rem);
}

.flow-space-xs {
  --flow-space: clamp(0.75rem, calc(0.68rem + 0.33vw), 0.94rem);
}

.flow-space-s {
  --flow-space: clamp(1rem, calc(0.91rem + 0.43vw), 1.25rem);
}

.flow-space-m {
  --flow-space: clamp(1.5rem, calc(1.37rem + 0.65vw), 1.88rem);
}

.flow-space-l {
  --flow-space: clamp(2rem, calc(1.83rem + 0.87vw), 2.5rem);
}

.flow-space-2xl {
  --flow-space: clamp(4rem, calc(3.65rem + 1.74vw), 5rem);
}

.flow-space-s-m {
  --flow-space: clamp(1rem, calc(0.7rem + 1.52vw), 1.88rem);
}

.flow-space-m-l {
  --flow-space: clamp(1.5rem, calc(1.15rem + 1.74vw), 2.5rem);
}

.flow-space-l-xl {
  --flow-space: clamp(2rem, calc(1.39rem + 3.04vw), 3.75rem);
}

.flow-space-xl-2xl {
  --flow-space: clamp(3rem, calc(2.3rem + 3.48vw), 5rem);
}

/* Gutter
Utilities for controlling gutter space */

.gutter-2xs {
  --gutter: clamp(0.5rem, calc(0.46rem + 0.22vw), 0.63rem);
}

.gutter-xs {
  --gutter: clamp(0.75rem, calc(0.68rem + 0.33vw), 0.94rem);
}

.gutter-s {
  --gutter: clamp(1rem, calc(0.91rem + 0.43vw), 1.25rem);
}

.gutter-m {
  --gutter: clamp(1.5rem, calc(1.37rem + 0.65vw), 1.88rem);
}

.gutter-s-m {
  --gutter: clamp(1rem, calc(0.7rem + 1.52vw), 1.88rem);
}

.gutter-m-l {
  --gutter: clamp(1.5rem, calc(1.15rem + 1.74vw), 2.5rem);
}
