---
import BlankLayout from '../layouts/BlankLayout.astro';

const pageMeta = {
  title: 'Lead Generation Calculator',
  description: 'Lead Generation | Straightforward Growth',
  image: '/media/og-image@2x.png',
  canonicalURL: 'https://straightforwardgrowth.com/calc/',
};
---

<BlankLayout meta={pageMeta}>
  <div
    class="relative z-0 overflow-hidden flex flex-col justify-center items-center bg-blue-vivid-1100"
    style="min-block-size: 100svh;"
  >
    <div
      class="absolute z-10 flex justify-start items-end overflow-hidden"
      style="pointer-events: none; left: 0; right: 0; bottom: 0;"
    >
      <div
        class="absolute z-0"
        style="background: radial-gradient(ellipse 75% 700px at 35% calc(100% + 100px), var(--color-indigo-vivid-900) 30%, var(--color-indigo-vivid-1000) 50%, var(--color-indigo-vivid-1100) 60%, transparent 100%); transform: rotate(-10deg); bottom: -200px; left: -200px; right: -200px; top: -200px; height: 700px; pointer-events: none;"
      >
      </div>
      <div
        class="grow z-10 bg-indigo-vivid-500"
        style="height: 0.5px; max-width: 1400px;"
      >
      </div>
      <div id="graph">
        <svg
          width="100%"
          height="100%"
          viewBox="0 0 5730 3942"
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
          class="relative z-10"
          style="height: 100%;"
        >
          <path
            id="upward-background"
            d="M5729.17,58.075l-0,3883.59l-5729.17,-0c83.3,-0 136.113,-42.709 173.783,-97.134c48.892,-70.625 72.313,-160.954 103.875,-203.262c118.888,-159.413 344.65,187.917 425.363,8.921c47.533,-105.45 124.721,-555.259 315.783,-622.671c145.259,-51.271 285.171,169.408 384.217,154.825c105.696,-15.554 458.471,-763.804 683.35,-846.633c50.312,-18.525 297.642,-125.867 442.204,-101.98c278.958,46.096 495.333,248.717 589.638,192.642c129.791,-77.171 71.283,-291.6 124.72,-419.271c34.413,-82.208 382.709,-123.458 441.025,-268.925c56.596,-141.179 208.334,-649.879 364.046,-660.262c155.692,-10.379 140.175,338.404 248.071,351.271c284.846,33.991 347.708,-265.855 385.75,-340.142c110.538,-215.796 420.642,-1008.32 1047.34,-1030.97Z"
            class="fill-blue-vivid-1100"></path>
          <path
            id="upward-curve"
            d="M0,3937.35c83.3,0 136.113,-39.087 173.783,-93.512c48.892,-70.625 72.309,-160.955 103.875,-203.267c118.888,-159.408 344.65,187.921 425.363,8.925c47.533,-105.45 124.721,-555.258 315.783,-622.675c145.259,-51.267 285.171,169.412 384.217,154.829c105.696,-15.554 458.471,-763.804 683.35,-846.633c50.312,-18.525 297.637,-125.867 442.204,-101.979c278.958,46.095 495.333,248.716 589.638,192.641c129.791,-77.171 71.283,-291.6 124.72,-419.271c34.409,-82.208 382.709,-123.458 441.025,-268.925c56.596,-141.179 208.334,-649.879 364.046,-660.262c155.692,-10.379 140.171,338.404 248.071,351.271c284.846,33.991 347.708,-265.854 385.75,-340.142c110.538,-215.796 420.642,-1008.32 1047.34,-1030.97"
            class="stroke-indigo-vivid-500"
            style="fill:none; stroke-width:.5px;"
            vector-effect="non-scaling-stroke"></path>
          <circle
            id="dot"
            cx="5700"
            cy="57"
            r="28"
            class="fill-indigo-vivid-500"></circle>
        </svg>
      </div>
      <div class="z-10 bg-blue-vivid-1100" id="mask-right">
        <svg
          width="100%"
          height="100%"
          viewBox="0 0 80 200"
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
          style="height: 346px; width: 70px;"
        >
          <rect
            id="mask-right"
            x="0"
            y="0"
            width="80"
            height="200"
            class="fill-blue-vivid-1100"></rect>
        </svg>
      </div>
    </div>
    <div
      class="region relative z-10 overflow-clip text-blue-vivid-100"
      id="estimate"
    >
      <div
        x-data="valueSlider"
        x-init="$watch('averageValue, sliderValue', () => calculateRevenue())"
        class="wrapper flow prose relative z-10"
      >
        <h2 class="mx-auto text-center">Impressions to cash</h2>
        <p class="mx-auto text-center">
          Calculate estimated revenue based on the impressions.†
        </p>

        <div class="switcher">
          <div
            class="box text-center flow bg-indigo-vivid-300 text-indigo-vivid-900 flow-space-m"
          >
            <h3 class="mx-auto mt-zero text-indigo-vivid-900">
              $<span x-text="prettyAverageValue"></span> LTV
            </h3>
            <h4 class="mt-2xs-xs text-indigo-vivid-900"></h4>
            <label for="averageValue" class="sr-only">Average value</label>
            <input
              id="averageValue"
              class="w-full mt-m"
              type="range"
              x-model="averageValue"
              min="500"
              max="250000"
              step="100"
            />
            <h3 class="mx-auto text-indigo-vivid-900">
              <span x-text="prettyImpressions"></span> impressions
            </h3>
            <label for="sliderValue" class="sr-only">Impressions</label>
            <input
              id="sliderValue"
              class="w-full mt-m"
              type="range"
              x-model="sliderValue"
              min="500"
              max="250000"
              step="100"
            />
          </div>
          <div
            class="box text-center bg-indigo-vivid-300 text-indigo-vivid-900 flex flex-col justify-center items-center"
          >
            <div class="flow prose">
              <h3 class="mx-auto mt-zero text-indigo-vivid-900">
                Monthly revenue
              </h3>
              <h4 class="text-step-4 text-indigo-vivid-900">
                <span x-text="monthlyRevenue"></span>
              </h4>
              <p class="mx-auto">
                <span x-text="leads"></span> leads, <span x-text="leadsClosed"
                ></span>
                 leads closed.
              </p>
            </div>
          </div>
        </div>
        <p
          class="mx-auto text-center text-step-0000"
          style="max-inline-size: 75ch"
        >
          † Assuming 2% conversion rate on impressions <a
            href="https://blog.hubspot.com/marketing/landing-page-stats#:~:text=The%20average%20landing%20page%20conversion,you%20and%20your%20target%20audience"
            target="_blank">¹</a
          >
          <a
            href="https://www.outerboxdesign.com/web-design-articles/ctr-based-on-organic-position"
            target="_blank">²</a
          > and a 10% close rate on leads.
        </p>
      </div>
    </div>
  </div>

  <style>
    #keyphrases {
      margin-bottom: var(--space-s-m);
      margin-right: var(--space-2xl-3xl);
    }
    #data {
      gap: var(--space-s-m);
      --wrapper-max-width: 70ch;
      flex-direction: column;
    }
    #graph {
      height: calc(150px + 1vw);
      transform: translateX(-2px);
    }
    #mask-right {
      height: calc(150px + 1vw);
      margin-right: -60px;
    }
    @media (min-width: 50em) {
      #keyphrases {
        margin-bottom: 0;
      }
      #data {
        flex-direction: row;
      }
      #graph,
      #mask-right {
        height: calc(150px + 10vw);
        margin-right: 0;
      }
    }

    @media (min-width: 90em) {
      #graph,
      #mask-right {
        height: calc(150px + 20vw);
        margin-right: 0;
      }
    }
  </style>

  <script>
    import Alpine from 'alpinejs';

    const formatter = new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      maximumFractionDigits: 0,
    });

    window.Alpine = Alpine;

    Alpine.data('valueSlider', () => ({
      init() {
        this.calculateRevenue();
      },
      sliderValue: '15000',
      prettyImpressions: '0',
      prettyAverageValue: '0',
      leads: 0,
      leadsClosed: 0,
      averageValue: '20000',
      monthlyRevenue: '$0',
      calculateRevenue() {
        this.leads = Math.round(
          (((Number(this.sliderValue) / 100) * 2) / 100) * 7
        );
        this.leadsClosed = Math.round((this.leads / 100) * 10);
        this.monthlyRevenue = formatter.format(
          Math.round(this.leadsClosed * Number(this.averageValue))
        );
        this.prettyImpressions = Number(this.sliderValue).toLocaleString(
          'en-US'
        );
        this.prettyAverageValue = Number(this.averageValue).toLocaleString(
          'en-US'
        );
      },
    }));

    Alpine.start();
  </script>
</BlankLayout>
